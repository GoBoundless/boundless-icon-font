This is an automated system to develop an icon webfont from all .svg files present in the "svg" folder.

It uses "fontCustom"
https://github.com/FontCustom/fontcustom

Design guidelines:
-All colors will be rendered identically — including white fills.
-Make transparent colors solid. SVGs with transparency will be skipped.
-For greater precision, prefer fills to strokes (especially if your icon includes curves).
-Keep your icon within a square viewBox. Font Custom scales each SVG to fit a 512x512 canvas with a baseline at 448.
-Setting autowidth to true trims horizontal white space from each glyph. This can be much easier than centering dozens of SVGs by hand.
-See screenshot for .svg export specs. Imprortant: export all svg’s as same size (512x512)


Installation:
brew install fontforge eot-utils ttfautohint
gem install fontcustom
brew install node

close, then open new terminal window.
run “fontcustom compile” in this folder just once to get it set up.


USAGE:
1. CD to this directory, then Run: 
node start.js
(will watch the svg folder for new files)

2. Add, or remove .svg files to/from the svg folder, and the css, and font will be automatically updated

3. Visit the styleguide folder to preview your font in the browser.

Specific to Boundless Learning App:
4. To move the updated font into the Boundless app, look in the “prepared” folder and:
   -Copy the stylesheet to wherever you need it in the app.
   -The stylesheet references the font files via sass-rails’ “font-url()” shortcut. Make sure you place the ENTIRE boundless-icon-font folder into your font directory (overwrite)


Notes:
-Config file is: fontcustom.yml. These config settings will only be loaded if the fontcustom command is run while in this directory
-If you run "node start.js" and the svg folder is empty, it will error and exit.